{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","props","onPageChange","pageNumbers","currentPage","className","classNames","disabled","href","onClick","map","number","active","length","getNumbers","from","to","numbers","n","push","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","Math","ceil","firstItem","lastItem","min","visibleItems","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAQaA,EAA8B,SAACC,GAC1C,IACEC,EAGED,EAHFC,aACAC,EAEEF,EAFFE,YACAC,EACEH,EADFG,YAeF,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBJ,EACfK,QAzB0B,WAC5BL,EAAc,GAChBF,EAAaE,EAAc,IAkBzB,oBAUDD,EAAYO,KAAI,SAAAC,GAAM,OACrB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQR,IAAgBO,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMP,EAAaS,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUH,IAAgBD,EAAYU,SAH5C,SAME,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeJ,IAAgBD,EAAYU,OAC3CJ,QArD0B,WAC5BL,EAAcD,EAAYU,QAC5BX,EAAaE,EAAc,IA8CzB,wBCrED,SAASU,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECAT,IAAMG,EAAQN,EAAW,EAAG,IACzBJ,KAAI,SAAAQ,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBqB,EAApB,KAEMtB,EAAcW,EAAW,EAAGY,KAAKC,KAAKP,EAAMP,OAASU,IACrDK,GAAaxB,EAAc,GAAKmB,EAAe,EAC/CM,EAAWH,KAAKI,IAAI1B,EAAcmB,EAAcH,EAAMP,QACtDkB,EAAeX,EAAMY,MAAMJ,EAAY,EAAGC,GAQhD,OACE,sBAAKxB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWD,EADX,mBACiCwB,EADjC,cACgDC,EADhD,eAC+DT,EAAMP,OADrE,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOX,EACPY,SApBuB,SAACC,GAChCX,EAAe,GACfD,EAAgBa,OAAOD,EAAME,OAAOJ,SAa9B,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEH,aAAcuB,EACdtB,YAAaA,EACbC,YAAaA,IAEf,6BACG2B,EAAarB,KAAI,SAAA8B,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d7fcd5cf.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  onPageChange: React.Dispatch<React.SetStateAction<number>>;\n  pageNumbers: number[];\n  currentPage: number;\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    onPageChange,\n    pageNumbers,\n    currentPage,\n  } = props;\n\n  const handleDecrementPageNumber = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleIncrementPageNumber = () => {\n    if (currentPage < pageNumbers.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleDecrementPageNumber}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(number => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === number },\n          )}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => onPageChange(number)}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === pageNumbers.length },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageNumbers.length}\n          onClick={handleIncrementPageNumber}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const pageNumbers = getNumbers(1, Math.ceil(items.length / itemsPerPage));\n  const firstItem = (currentPage - 1) * itemsPerPage + 1;\n  const lastItem = Math.min(currentPage * itemsPerPage, items.length);\n  const visibleItems = items.slice(firstItem - 1, lastItem);\n\n  // eslint-disable-next-line max-len\n  const handleSelectItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setItemsPerPage(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelectItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        onPageChange={setCurrentPage}\n        pageNumbers={pageNumbers}\n        currentPage={currentPage}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}